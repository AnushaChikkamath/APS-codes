# -*- coding: utf-8 -*-
"""form_smallest_number.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U_QyT8VlAu2EmXdD-cmrgPjjIkgLUgvU
"""

"""
  Given two arrays of unique digits nums1 and nums2, return the smallest number 
  that contains at least one digit from each array.

  Input: nums1 = [4,1,3], nums2 = [5,7]
  Output: 15

  Input: nums1 = [3,5,2,6], nums2 = [3,1,7]
  Output: 3

"""
from typing import List

class Solution:
    def minNumber(self, nums1: List[int], nums2: List[int]) -> int:
        x=999
        for i in nums2:
            if(i in nums1):
                if(i<x):
                    x=i
        if(x!=999):
            return x
        else:
            x=min(nums1)
            y=min(nums2)
            if(x<y):
                min1=x
                min2=y
            else:
                min1=y
                min2=x
            num1 = str(min1)
            num2 = str(min2)
         
        # Concatenate the strings
            num1 += num2
         
            return int(num1)
            
        
arr1 = list(map(int, input().split()))
arr2 = list(map(int, input().split()))
ob=Solution()
x=ob.minNumber(arr1,arr2)
print(x)

