# -*- coding: utf-8 -*-
"""Shortest_common_subsequence.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aQBoE_H6m4qF3Sjc3xblntUAR58GeS8N
"""

from math import *
import sys

#Shortest common subsequence
# for example- input- ADEFG and PLMFGO
# output - ADEPLMFGO (length = 9)

def shortest_common_subsequence(strs1,strs2,n,m):
  dp=([[0 for i in range(m+1)] for j in range(n+1)])

  for i in range(m+1):
    dp[0][i]=i
  
  for i in range(n+1):
    dp[i][0]=i

  for i in range(1,n+1):
    for j in range(1,m+1):
      if(strs1[i-1]==strs2[j-1]):
        dp[i][j]=1+dp[i-1][j-1]

      else:
        dp[i][j]=min(dp[i-1][j],dp[i][j-1])+1

  return dp[n][m]



def main():
  string1=input('Enter the first string')
  n=len(string1)
  string2=input('Enter the second string')
  m=len(string2)
  x=shortest_common_subsequence(string1,string2,n,m)
  print(f'The length of the shortest common subsequence is {x}.')

if __name__=="__main__":
  main()

