# -*- coding: utf-8 -*-
"""maximum_product_subarray.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xX9h5ywVbAQHVxHbK_9lqAtnvWYpNhSK
"""

"""
  Maximum product subarray-
  return the maximum product that can be obtained from the subarray
  Input - [6 -3 -10 0 2]
  Output- 180

  Efficient approach- using a variant of Kadane's algorithm.
  Time complexity- O(n)

"""
def maximum_product_subarray(arr,n):
  prod1=arr[0]
  prod2=arr[0]
  result=arr[0]

  for i in range(1,n):
    temp=max(arr[i],arr[i]*prod1,arr[i]*prod2)
    prod2=min(arr[i],arr[i]*prod1,arr[i]*prod2)
    prod1=temp

    result=max(prod1,result)

  return result

def main():
  print('Enter the array of elements')
  arr = list(map(int, input().split()))
  n=len(arr)
  summ=maximum_product_subarray(arr,n)
  print(f'The maximum subarray product is {summ}.')

if __name__=="__main__":
  main()

