# -*- coding: utf-8 -*-
"""max_binary.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U_QyT8VlAu2EmXdD-cmrgPjjIkgLUgvU
"""

"""
    Given binary string S of length N, and an integer K.
    Maximize the decimal representation of S using K operations of the following type:

    Type 1: Insert 0 at any position in the string.
    Type 2: Change any 0 to 1.

    Find the modified string with maximum possible decimal representation after performing at most 
    K operations.

    Input- 4 2      Output- 110100
           1101 
    Input- 6 3      Output- 10111000
           001110   

"""

def replacer(s, newstring, index, nofail=False):
    if not nofail and index not in range(len(s)):
        raise ValueError("index outside given string")

   
    if index < 0:  # add it to the beginning
        return newstring + s
    if index > len(s):  # add it to the end
        return s + newstring

 
    return s[:index] + newstring + s[index + 1:]
    
t=int(input())
for i in range(t):
    N,K=(map(int,input().split()))
    x=input()
    if(K==1):
        if(x[0]=='0'):
            x=replacer(x, '1', 0)
            print(x)
        else:
            x=x+'0'
            print(x)
    if(K>1):
        if(x[0]=='0'):
            x=replacer(x, '1', 0)
            K=K-1
            for i in range(0,K):
                x=x+'0'
            print(x)
        else:
            for i in range(K):
                x=x+'0'
            print(x)

