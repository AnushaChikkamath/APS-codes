# -*- coding: utf-8 -*-
"""maximum_sum_increasing_subsequence.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xX9h5ywVbAQHVxHbK_9lqAtnvWYpNhSK
"""

"""
  Maximum sum increasing subsequence
  Input- {1, 101, 2, 3, 100, 4, 5}
  Output - 106 - {1, 2, 3, 100}
  A variant of longest increasing subsequence
  Time complexity - O(n^2)

"""

def max_sum_increasing(arr,n):

  dp=([arr[i] for i in range(n)])
  for i in range(1,n):
    for j in range(0,i):
      if(arr[i]>arr[j] and dp[j]+arr[i]>dp[i]):
        dp[i]=arr[i]+dp[j]

  return max(dp)


def main():
  print('Enter the array of elements')
  arr = list(map(int, input().split()))
  n=len(arr)
  summ=max_sum_increasing(arr,n)
  print(f'Sum of maximum sum increasing subsequence is {summ}.')

if __name__=="__main__":
  main()

