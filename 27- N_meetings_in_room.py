# -*- coding: utf-8 -*-
"""N_meetings_in_room.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xX9h5ywVbAQHVxHbK_9lqAtnvWYpNhSK
"""

"""
 N meetings in one room: 

 There is one meeting room in a firm. 
 start and end timings of each meeting is given in two arrays.

 Find the maximum number of meetings that can be accommodated
 if only one meeting can happen in the room at a  particular time.
 Print the order in which these meetings will be performed.

"""

from typing import List


class meeting:
    def __init__(self, start, end, pos):
        self.start = start
        self.end = end
        self.pos = pos


class Solution:

    def maxMeetings(self, s: List[int], e: List[int], n: int) -> None:
        meet = [meeting(s[i], e[i], i + 1) for i in range(n)]

        sorted(meet, key=lambda x: (x.end, x.pos))
        answer = []
        limit = meet[0].end
        answer.append(meet[0].pos)
        
        for i in range(1, n):
            if meet[i].start > limit:
                limit = meet[i].end
                answer.append(meet[i].pos)
        print("The order in which the meetings will be performed is ")
        for i in answer:
            print(i, end=" ")


def main():
  obj = Solution()
  print('Enter the starting time of meetings')
  start = list(map(int, input().split()))
  print('Enter the ending time of meetings')
  end = list(map(int, input().split()))
  n=len(start)
  obj.maxMeetings(start,end,n)

if __name__=="__main__":
  main()

