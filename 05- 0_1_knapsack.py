# -*- coding: utf-8 -*-
"""0/1_Knapsack.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aQBoE_H6m4qF3Sjc3xblntUAR58GeS8N
"""

def knapsack(N,W,weight,value):

  dp_table=([[0 for i in range(W+1)] for j in range(N+1)])

  for i in range(0,N+1):
    dp_table[i][0]=0

  for i in range(0,W+1):
    dp_table[0][i]=0

  for i in range(1,N+1):
    for j in range(1,W+1):
      if(j<weight[i-1]):
        dp_table[i][j]= dp_table[i-1][j]
      else:
        dp_table[i][j]=max(dp_table[i-1][j],dp_table[i-1][j-weight[i-1]]+value[i-1])

  return dp_table[N][W]

def main():
  N=int(input('Enter the number of items'))
  print("Enter the weight of items")
  weight = list(map(int, input().split()))
  print("Enter the profit from items")
  value = list(map(int, input().split()))
  W=int(input('Enter the maximum weight of knapsack'))

  max_profit=knapsack(N,W,weight,value)
  print(f"The maximum profit to be obtained by adding items in the knapsack is {max_profit}.")


if __name__ == "__main__":
  main()

