# -*- coding: utf-8 -*-
"""equal_diverse_teams.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U_QyT8VlAu2EmXdD-cmrgPjjIkgLUgvU
"""

"""
  Equal Diverse Teams:
   Alice has students in his class, numbered 1 through N. The student has expertise in a subject numbered Ai.
   Alice has to divide the students into two teams. The uniqueness of a team is defined as the number 
   of distinct subjects such that there is atleast one student in the team with expertise in the subject. 

   Alice wants to distribute the students of the class into two teams such that each student belongs to 
   exactly one team and the uniqueness of each team is exactly K.

   For each test case, print YES if Alice is able to make two teams satisfying the given conditions, 
   otherwise print NO.

   Input- 6 2                   Output- Yes
          1 4 4 6 2 1
   Input- 4 2                   Output- No
          1 1 1 1


"""


num= int(input()) 

def count(ar, n,k):

    mp = dict()
    count_dis=0
    # Traverse through array elements
    # and count frequencies

    for i in range(n):
        if ar[i] in mp.keys():
            mp[ar[i]] += 1
        else:
            mp[ar[i]] = 1

    #print(len(mp))
    #print(mp)
    x=int(len(mp))
    if x>2*k or x<k:
        print('NO')
    else:
        count=0
        even=0
        for value in mp.values():
            if(value)==1:
                count=count+1
            else:
                even=even+1
        if(x==2*k):
            print('YES')
        else:
            if(count<=1):
                if(even>=k):
                    print('YES')
                else:
                    print('NO')

            else:
                z=count/2
                if(even>=k-z):
                    print('YES')
                else:
                    print('NO')
        

        

for i in range(num):
    N,K=(map(int,input().split()))
    arr = list(map(int, input().split()))
    count(arr,N,K)

