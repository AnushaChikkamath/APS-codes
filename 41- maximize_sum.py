# -*- coding: utf-8 -*-
"""maximize_sum.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U_QyT8VlAu2EmXdD-cmrgPjjIkgLUgvU
"""

"""
  Maximize Sum:

  Given an array A of length n, construct an array B of size n
  where B[i]= i* A[i]. Before constructing the array B, you can
  swap the elements of array A at most N*N times(possibly 0 times).
  Find the maximum sum of elements possible of array B after 
  performing such operations.

  Input : n = 2   A = 2 1
  Output : 5

  Input : n = 3   A = 1 1 1
  Output : 6

"""
class Solution:
    def maximumSum(self, n, A):
        # code here
        A.sort()
        sum=0
        #print(A)
        for i in range(n):
            sum=sum+((i+1)*A[i])
            
        return sum

if __name__=='__main__':
  tc=int(input())
  while tc>0:
    n=int(input())
    arr1 = list(map(int, input().split()))
    ob=Solution()
    ans=ob.maximumSum(n,arr1)
    print(ans)
    tc-=1

