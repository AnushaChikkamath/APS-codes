# -*- coding: utf-8 -*-
"""edit_distance.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aQBoE_H6m4qF3Sjc3xblntUAR58GeS8N
"""

from math import *
import sys

#Edit distance of two strings is the minimum number of steps required to
#make one string equal to the other

#The three operations that can be performed are - insert a character, delete a
#character, replace one character with another

#strig1- destination and string2- source
def edit_distance(string1,string2):
  edit=([[0 for i in range(len(string1)+1)] for j in range(len(string2)+1)])

  for i in range(len(string1)+1):
    edit[0][i]=i
  
  for i in range(len(string2)+1):
    edit[i][0]=i

  for i in range(1,len(string2)+1):
    for j in range(1,len(string1)+1):
      if(string2[i-1]==string1[j-1]):
        edit[i][j]=min(edit[i-1][j-1],edit[i-1][j],edit[i][j-1])
      else:
        edit[i][j]=1+min(edit[i-1][j-1],edit[i-1][j],edit[i][j-1])

  return edit[len(string2)][len(string1)]


def main():
  string1=input('Enter the source string')
  string2=input('Enter the destination string')
  x=edit_distance(string2,string1)
  print(f'The minimum number of operations required are {x}.')

if __name__=="__main__":
  main()

