# -*- coding: utf-8 -*-
"""longest_prefix_suffix.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xX9h5ywVbAQHVxHbK_9lqAtnvWYpNhSK
"""

"""
  Longest prefix suffix:

  Given a string of characters, find the length of the longest
  proper prefix which is also a proper suffix.

  Input- abab
  Output- 2

  Input- aaaa
  Output- 3

"""

from typing import List

def lps(strs):
  n=len(strs)
  j=0
  i=1

  dp=([0 for i in range(n)])
  while(i<n):
    if(strs[i]==strs[j]):
      dp[i]=j+1
      j=j+1
      i=i+1

    else:
      if(j==0):
        i=i+1
      else:
        j=dp[j-1]

  return dp[n-1]


def main():
  strs=input('Enter the string')
  x=lps(strs)
  print(f'The length of the longest prefix which is also a suffix is {x}.')
  

if __name__=="__main__":
  main()

