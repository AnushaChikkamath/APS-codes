# -*- coding: utf-8 -*-
"""minimum_factorization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nfwrahhEYGANgbDN7DO3D3a-alw6Bler
"""

# Time:  O(loga)
# Space: O(1)

class Solution(object):
    def smallestFactorization(self, a):

        if a < 2:
            return a
        result, mul = 0, 1
        for i in reversed(range(2, 10)):
            while a % i == 0:
                a /= i
                result = mul*i + result
                mul *= 10
        return  result if a == 1 and result < 2**31 else 0

print(Solution().smallestFactorization(20))

